#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>
#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"

//===================================================================//

const char* net = "net_2232";
const char* password = "102030102030";

// Firebase settings
#define API_KEY "AIzaSyDbp42OfCdd4opQnsOC0RLZIUuW8c95YvI"
#define DATABASE_URL "https://smartheat-951e2-default-rtdb.firebaseio.com/"

// Pin and sensor type
#define DHTPIN D2
#define DHTTYPE DHT22

// Creating objects
DHT dhtSensor(DHTPIN, DHTTYPE);
const int relay1 = D1;

FirebaseData fbData;
FirebaseConfig config;
FirebaseAuth auth;

//===================================================================//

void setup() {
  Serial.begin(115200);

  // Connecting to WiFi
  WiFi.begin(net, password);
  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.println("CONNECTED");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;

  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("SignUp OK");
  } else {
    Serial.println("Error, SignUp failed");
  }

  config.token_status_callback = tokenStatusCallback;
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  // Starting DHT sensor
  dhtSensor.begin();

  // Define pin for relay
  pinMode(relay1, OUTPUT);
  // Relay is OFF
  digitalWrite(relay1, HIGH);
}

//===================================================================//

void ManualMode() {
  if (Firebase.RTDB.getInt(&fbData, "relay1/status")) {
    int status = fbData.intData();
    digitalWrite(relay1, status == 1 ? LOW : HIGH);
    Serial.println(status == 1 ? "Relay is ON" : "Relay is OFF");
  } else {
    Serial.print("Error reading data from Firebase: ");
    Serial.println(fbData.errorReason());
  }
}

//===================================================================//

void SensorDataToFirebase() {
  float temperature;
  float humidity;
  int attempts = 3;

  while (attempts--) {
    temperature = dhtSensor.readTemperature();
    humidity = dhtSensor.readHumidity();

    if (!isnan(temperature) && !isnan(humidity)) {
      break;
    }
    delay(500); // Wait before retry
  }

  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read data from DHT sensor after retries");
    return;
  }

  if (Firebase.RTDB.setFloat(&fbData, "sensor/temperature", temperature)) {
    Serial.print("Temperature sent: ");
    Serial.println(temperature);
  } else {
    Serial.print("Failed to send temperature: ");
    Serial.println(fbData.errorReason());
  }

  if (Firebase.RTDB.setFloat(&fbData, "sensor/humidity", humidity)) {
    Serial.print("Humidity sent: ");
    Serial.println(humidity);
  } else {
    Serial.print("Failed to send humidity: ");
    Serial.println(fbData.errorReason());
  }
}

//===================================================================//

void AutoMode() {
  int statusAutoMod, maxTemp, minTemp, currentTemp;

  if (!Firebase.RTDB.getInt(&fbData, "autoMod/statusAutoMode") ||
      !Firebase.RTDB.getInt(&fbData, "temperatureSettings/maxTemp") ||
      !Firebase.RTDB.getInt(&fbData, "temperatureSettings/minTemp") ||
      !Firebase.RTDB.getInt(&fbData, "sensor/temperature")) {
    Serial.print("Error reading auto mode data: ");
    Serial.println(fbData.errorReason());
    return;
  }

  statusAutoMod = fbData.intData();
  maxTemp = fbData.intData();
  minTemp = fbData.intData();
  currentTemp = fbData.intData();

  float hysteresis = 0.5;

  if (statusAutoMod == 1) {
    if (currentTemp < minTemp - hysteresis) {
      digitalWrite(relay1, LOW);
      Firebase.RTDB.setString(&fbData, "info/message", "Heating is ON - Current temperature below minTemp");
    } else if (currentTemp > maxTemp + hysteresis) {
      digitalWrite(relay1, HIGH);
      Firebase.RTDB.setString(&fbData, "info/message", "Heating is OFF - Current temperature above maxTemp");
    } else {
      digitalWrite(relay1, HIGH);
      Firebase.RTDB.setString(&fbData, "info/message", "Heating is OFF - Temperature within range. No action taken");
    }
  } else {
    ManualMode();
  }
}

//===================================================================//

void loop() {
  static unsigned long lastSensorUpdate = 0;
  static unsigned long lastAutoModeCheck = 0;
  unsigned long currentMillis = millis();

  // Update sensor data every 5 seconds
  if (currentMillis - lastSensorUpdate >= 5000) {
    lastSensorUpdate = currentMillis;
    SensorDataToFirebase();
  }

  // Check auto mode every 2 seconds
  if (currentMillis - lastAutoModeCheck >= 2000) {
    lastAutoModeCheck = currentMillis;
    AutoMode();
  }
}
